@use 'variables' as v
  
@function getSpace($sizeString, $position)

  $size:5867
  @if $sizeString == 'fibonacci size 8'
    $size: fibonacciLoop(8)
  @else if $sizeString == 'fibonacci size 7'
    $size: fibonacciLoop(7)
  @else if $sizeString == 'fibonacci size 6'
    $size: fibonacciLoop(6)
  @else if $sizeString == 'fibonacci size 5'
    $size: fibonacciLoop(5)
  @else if $sizeString == 'fibonacci size 4'
    $size: fibonacciLoop(4)
  @else if $sizeString == 'fibonacci size 3'
    $size: fibonacciLoop(3)
  @else if $sizeString == 'fibonacci size 2'
    $size: fibonacciLoop(2)
  @else if $sizeString == 'fibonacci size 1'
    $size: fibonacciLoop(1)
  @else
    @error '#{$sizeString} does not match in getSpace'

  @debug 'fibonacci size is #{$size}'

  @if $position == 'all'
    @return #{$size * v.$golden_ratio}rem #{$size}rem
  @else if $position == 'top and bottom'
    @return 0 #{$size}rem
  @else if $position == 'left and right'
    @return #{$size * v.$golden_ratio}rem 0
  @else if $position == 'single'
    @return #{$size}rem
  @else if $position == 'golden single'
    @return #{$size * v.$golden_ratio}rem
  @else
    @error '#{$position} does not match in getSpace'


@function fibonacciLoop($loopVal, $number: 1, $next: 2, $loops: 1)
  @debug 'loops #{$loops} number is #{$number}'
  $maxLoops: 10
  @if $loopVal > $maxLoops 
    @warn 'The maximum number of fibonacci loops allowed is #{$maxLoops}. $loopVal provided was #{$loopVal}'
    @return 0  
  @if $loopVal == $loops 
    @debug 'loop val #{$loopVal} met, returning #{$number}'
    @return $number 

  @return fibonacciLoop($loopVal, $next, $number + $next, $loops + 1)





